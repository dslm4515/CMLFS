# General Build Notes for stage 0 LLVM/Clang

# Builds for stage 0 assume the following:
# o bash is the shell in use
# o sh is a symbolic link to bash
# o /usr/bin/awk is a symbolic link to gawk
# o /usr/bin/yacc is a symbolic link to bison
#   or a script that executes bison
# o flex is required when building source snapshots of GCC

echo $SHELL
file /bin/sh
file /usr/bin/awk
file /usr/bin/yacc
which flex

# Make sure building cgnutools as cmlfs
whoami

# Make sure PATH is set correctly:
export PATH=/cgnutools/bin:/llvmtools/bin:/usr/bin:/bin

# Each package should be unpacked in /mnt/cmlfs/source and change
# to the unpacked source directory. For example:
cd /mnt/cmlfs/sources
tar xf pkgs/foo-1.2.3.tar.gz
cd foo-1.2.3

# Then patch and compile per instruction
patch -Np1 -i ../patches/foo-mlfs/fix-it.patch
./configure --prefix=/cgnutools
make
make install

# After the package is installed, change directories and remove
# unpacked source directory unless instructed:
cd ..
rm -rf foo-1.2.3

################################################################################
# cgnutools is now bootsrapped with Mussel (https://github.com/firasuke/mussel)
# This will quickly build a GCC-toolchain targeted for musl libc.
################################################################################

# Cross-gcc will stay in cgnutools, but cross-compile a clang toolchain in llvmtools. It will
# also build the required packages [in llvmtools] to build stage0 clang
# o kernel headers
# o musl libc
# o zlib-ng
# o libatomic-chimera
# o CMake (if host doesn't have it?)
# o Python3 (if host doesn't have it?)
