# Build musl libc for llvmtools with gcc of cgnutools
# build as cmlfs

export CC=${CMLFS_TARGET}-gcc 
export CXX=${CMLFS_TARGET}-g++

CC=$CC CXX=$CXX ./configure --prefix=/ 

# Build and install to llvmtools
make && make DESTDIR=/llvmtools install

# fix a symlink
rm -v /llvmtools/lib/ld-musl-x86_64.so.1
ln -sv libc.so /llvmtools/lib/ld-musl-x86_64.so.1

# Create a symlink to make a tool that can print the 
# shared objects (shared libraries) required by each 
# program or shared object (i.e. library)
mkdir /llvmtools/{bin,etc}
ln -sv ../lib/libc.so /llvmtools/bin/ldd

# Configure dynamic linker
cat > /llvmtools/etc/ld-musl-x86_64.path << "EOF"
/llvmtools/lib
EOF

# Install the kernel headers
# as cmlfs

# Clean
make mrproper

# Generate headers
make ARCH=${CMLFS_ARCH} CC=$CC CXX=$CXX  headers

# Install to llvmtools
find usr/include \( -name .install -o -name ..install.cmd \) -delete
cp -rv usr/include/* /llvmtools/include/

# Remove unecessary Makefile
rm -v /llvmtools/include/Makefile

# Build libexecinfo
# as cmlfs

# Patch source to fix broken build system
patch -Np1 -i ../patches/libexecinfo-alpine/10-execinfo.patch
patch -Np1 -i ../patches/libexecinfo-alpine/20-define-gnu-source.patch
patch -Np1 -i ../patches/libexecinfo-alpine/30-linux-makefile.patch

# build
CC=$CC CXX=$CXX CFLAGS=" -fno-omit-frame-pointer" make

# Install to llvmtools
install -D -m755 -v execinfo.h       /llvmtools/include/execinfo.h     && \
install -D -m755 -v stacktraverse.h  /llvmtools/include/stacktraverse.h && \
install -D -m755 -v libexecinfo.a    /llvmtools/lib/libexecinfo.a      && \
install -D -m755 -v libexecinfo.so.1 /llvmtools/lib/libexecinfo.so.1   && \
ln -sv libexecinfo.so.1              /llvmtools/lib/libexecinfo.so

# Build ncurses
# as cmlfs

# Then, run the following commands to build the “tic” program on the build host:
unset CC CXX
mkdir build
pushd build
  ../configure
  make -C include
  make -C progs tic
popd

# Ensure that gawk is found first during configuration: 
sed -i s/mawk// configure

# Configure
export CC=${CMLFS_TARGET}-gcc
export CXX=${CMLFS_TARGET}-g++

CC=$CC CXX=$CXX \
./configure --prefix=/llvmtools \
            --host=${TARGET_TUPLE} \
            --with-shared   \
            --without-debug \
            --without-ada   \
            --enable-widec  \
            --enable-overwrite

# Build and install
make && make TIC_PATH=$(pwd)/build/progs/tic install

# Bash build expects to find libcurses.so:
ln -sv libncursesw.so.6.2 /llvmtools/lib/libcurses.so

# Create symlinks for building stage 1 clang.
# Required by llvm-tblgen when building stage 1 LLD
ln -sv /cgnutools/x86_64-cmlfs-linux-musl/lib/libstdc++.so.6.0.30 /llvmtools/lib/libstdc++.so.6 
ln -sv /cgnutools/x86_64-cmlfs-linux-musl/lib/libgcc_s.so.1 /llvmtools/lib/libgcc_s.so.1 

