# llvmtools Chain: GCC Part 1
# Build and install as cmlfs

# Additional sources to add as GCC requires them
xz -cd ../pkgs/mpfr-4.1.1.tar.xz | tar -xf -
mv -v mpfr-4.1.1 mpfr
xz -cd ../pkgs/gmp-6.2.1.tar.xz | tar -xf -
mv -v gmp-6.2.1 gmp
gunzip -cd ../pkgs/mpc-1.2.1.tar.gz | tar -xf -
mv -v mpc-1.2.1 mpc

# Apply patches [from Glaucus]
patch -Np0 -i ../patches/glaucus/0001-pure64-for-x86-64.patch

# change the location of GCC's default dynamic linker to use the one installed in /llvmtools
#
# For i686/x86_64:
for file in gcc/config/{linux,i386/linux{,64}}.h
do
  cp -uv $file{,.orig}
  sed -e 's@/lib\(64\)\?\(32\)\?/ld@/llvmtools&@g' \
      -e 's@/usr@/llvmtools@g' $file.orig > $file
  echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/llvmtools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
  touch $file.orig
done

# Configure in dedicated build directory
mkdir -v build && cd build

# Set build options:
export CARGS="--prefix=/llvmtools "
#export CARGS+="--with-local-prefix=/llvmtools "
export CARGS+="--with-sysroot=/llvmtools "

# Enable only C++ and C languages
export CARGS+="--enable-languages=c,c++ "

# Disable features not supported by Musl
export CARGS+="--disable-libsanitizer "
export CARGS+="--disable-symvers "

# Disable features not needed during chroot
export CARGS+="--disable-libssp "
export CARGS+="--disable-libvtv "
export CARGS+="--disable-libitm "
export CARGS+="--disable-libgomp "
export CARGS+="--disable-multilib "
export CARGS+="--disable-bootstrap "
export CARGS+="--disable-libquadmath "
export CARGS+="--disable-libstdcxx-pch "
export CARGS+="--disable-libstdcxx "

# When creating a complete cross-compiler, GCC requires standard headers
# compatible with the target system. For our purposes these headers will
# not be needed. This switch prevents GCC from looking for them.
export CARGS+="--without-headers"

# GCC has to be compiled with binutils
set-gnu-bin-mode

# GCC build will look for headers in /llvmtools/usr/include. Create a link for it:
mkdir /llvmtools/usr -v
ln -sv ../include /llvmtools/usr/include

# GCC build will look for crt object files in /llvmtools/$TUPLE/lib
ln -sv ../../lib/crt1.o /llvmtools/x86_64-pc-linux-musl/lib/
ln -sv ../../lib/crti.o /llvmtools/x86_64-pc-linux-musl/lib/
ln -sv ../../lib/crtn.o /llvmtools/x86_64-pc-linux-musl/lib/

# Configure source:
CC=clang CXX=clang++ \
CFLAGS='-g0 -O0 ' \
CXXFLAGS=$CFLAGS \
../configure $CARGS

# compile:
make

# build fails:
/sources/gcc-12.2.0/libatomic/configure: line 3919: 31834 Segmentation fault      ./conftest$ac_cv_exeext
configure:3921: $? = 139
configure:3928: error: in `/sources/gcc-12.2.0/build/x86_64-pc-linux-musl/libatomic':
configure:3930: error: cannot run C compiled programs.
If you meant to cross compile, use `--host'.
