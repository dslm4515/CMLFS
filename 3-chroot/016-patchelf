# Stage1: Patchelf
# Build and install under chroot


# Setting the dynamic linker configuration option in Clang
# will cause static executables to segfault. As an alternative
# for setting the dynamic linker/linux-loader/interpreter, build
# patchelf to fix binaries until stage2 clang is built.

# Configure source to use LLVM's binary tools
CC=clang \
CXX=clang++ \
LD=ld.lld \
RANLIB=llvm-ranlib \
STRIP=llvm-strip \
OBJDUMP=llvm-objdump \
READELF=llvm-readelf \
OBJCOPY=llvm-objcopy \
AR=llvm-ar \
AS=llvm-as \
./configure --prefix=/llvmtools

# Build and install to llvmtools
make && make install

# Create a script to easily set the dynamic loader/linker/interpreter
# for a binary:
cat > /llvmtools/bin/setDL << "EOF"
#!/bin/sh
# Set the dynamic loader/linker/interpreter of a binary
# USAGE: setDL a.out

case $(uname -m) in
        i686)    export MCARCH="i386"
                 ;;
        x86_64)  export MCARCH="x86_64"
                 ;;
        aarch64) export MCARCH="arch64"
                 ;;
        arm*)    export MCARCH="arm"
                 ;;
esac

export PROOT=" "
patchelf --set-interpreter ${PROOT}/lib/ld-musl-$(uname -m).so.1 $1
EOF

chmod -v +x /llvmtools/bin/setDL
