# Final Stage2 clang (with compiler-rt,libcxx,libcxxabi,libunwind,lld)
# Build under chroot
#
# NOTE: Reuse llvm-project source tree from before

# Configure stage1 clang:
cat > /llvmtools/bin/$(uname -m)-pc-linux-musl.cfg << "EOF"
--sysroot=/usr
-nostdinc++
-nostdinc
-I/usr/include/c++/v1
-I/usr/include
-I/llvmtools/include/c++/v1
-I/llvmtools/include
-I/llvmtools/lib/clang/15.0.6/include
-L/usr/lib
-L/llvmtools/lib
EOF

# Restore default dynamic linker/loader path to /lib
patch -Np1 -i ../patches/llvm1506-cmlfs/modify-test-dynamic-loader_restore.patch
patch -Np1 -i ../patches/llvm1506-cmlfs/modify-toolchain-dynamic-loader_restore.patch


# Set the compiler and linker flags...
export  CT="-DCMAKE_C_COMPILER=$CC "
export CT+="-DCMAKE_CXX_COMPILER=$CXX "
export CT+="-DCMAKE_AR=/llvmtools/bin/llvm-ar "
export CT+="-DCMAKE_NM=/llvmtools/bin/llvm-nm "
export CT+="-DCMAKE_RANLIB=/llvmtools/bin/llvm-ranlib "
export CT+="-DCLANG_DEFAULT_LINKER=/usr/bin/ld.lld "

# Set the tuples & build target ...
export  CTG="-DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-pc-linux-musl "
export CTG+="-DLLVM_HOST_TRIPLE=x86_64-pc-linux-musl "
export CTG+="-DCOMPILER_RT_DEFAULT_TARGET_TRIPLE=x86_64-pc-linux-musl "
export CTG+="-DLLVM_TARGETS_TO_BUILD=host "
export CTG+="-DLLVM_TARGET_ARCH=host "
export CTG+="-DLLVM_TARGETS_TO_BUILD=Native;host;AMDGPU "

# Set the paths ...
export  CP="-DCMAKE_INSTALL_PREFIX=/usr "

# Set options for compiler-rt
export  CRT="-DCOMPILER_RT_USE_LLVM_UNWINDER=ON "
export CRT+="-DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON "
# + Turn off optional runtimes:
export CRT+="-DCOMPILER_RT_BUILD_SANITIZERS=OFF "
export  CRT="-DCOMPILER_RT_BUILD_XRAY=OFF "
export CRT+="-DCOMPILER_RT_BUILD_LIBFUZZER=OFF "
#export CRT+="-DCOMPILER_RT_BUILD_PROFILE=OFF "
#export CRT+="-DCOMPILER_RT_BUILD_MEMPROF=OFF "
# + Avoid need for libexecinfo:
export CRT+="-DCOMPILER_RT_BUILD_GWP_ASAN=OFF "

# Set options for clang
# + Set the standard C++ library that clang will use to LLVM's libc++
# + Set compiler-rt as default runtime
export  CLG="-DCLANG_DEFAULT_CXX_STDLIB=libc++ "
export CLG+="-DCLANG_DEFAULT_RTLIB=compiler-rt "
export CLG+="-DCLANG_DEFAULT_UNWINDLIB=libunwind "
export CLG+="-DCLANG_DEFAULT_CXX_STDLIB=libc++ "

# Set options for libc++
export  CLCPP="-DLIBCXX_HAS_MUSL_LIBC=ON "
export CLCPP+="-DLIBCXX_ENABLE_LOCALIZATION=ON "
export CLCPP+="-DLIBCXX_ENABLE_NEW_DELETE_DEFINITIONS=ON "
export CLCPP+="-DLIBCXX_CXX_ABI=libcxxabi "
export CLCPP+="-DLIBCXX_USE_COMPILER_RT=ON "
export CLCPP+="-DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON "
export CLCPP+="-DLIBCXX_ENABLE_ASSERTIONS=ON "

# Set options fo libc++abi
export  CLCPPA="-DLIBCXXABI_USE_LLVM_UNWINDER=ON "
export CLCPPA+="-DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON "
export CLCPPA+="-DLIBCXXABI_USE_COMPILER_RT=ON "

# Set options for libunwind
export  CUW="-DLIBUNWIND_INSTALL_HEADERS=ON "
export CUW+="-DLIBUNWIND_USE_COMPILER_RT=ON "

# Set LLVM options
# + Enable Exception handling and Runtime Type Info
export  CLLVM="-DLLVM_ENABLE_EH=ON -DLLVM_ENABLE_RTTI=ON "
export CLLVM+="-DLLVM_ENABLE_ZLIB=ON "
export CLLVM+="-DZLIB_INCLUDE_DIR=/usr/include "
export CLLVM+="-DZLIB_LIBRARY_RELEASE=/usr/lib/libz.so "
export CLLVM+="-DLLVM_INSTALL_UTILS=ON "
export CLLVM+="-DLLVM_BUILD_LLVM_DYLIB=ON "
export CLLVM+="-DLLVM_LINK_LLVM_DYLIB=ON "
export CLLVM+="-DENABLE_LINKER_BUILD_ID=ON "
export CLLVM+="-DLLVM_ENABLE_PER_TARGET_RUNTIME_DIR=ON "
export CLLVM+="-DLLVM_ENABLE_LIBCXX=ON "
export CLLVM+="-DLLVM_ENABLE_LLD=ON "
export CLLVM+="-DLLVM_ENABLE_ZSTD=ON "
export CLLVM+="-DLLVM_ENABLE_TERMINFO=ON "

# Turn off LLVM options
# + Turn off features host may have
export  COFF="-DLLVM_ENABLE_LIBEDIT=OFF "
export COFF+="-DLLVM_ENABLE_LIBXML2=OFF "
export COFF+="-DLLVM_ENABLE_LIBPFM=OFF "

cmake -B build -G Ninja -Wno-dev -S llvm \
      -DCMAKE_BUILD_TYPE=Release \
      -DLLVM_ENABLE_PROJECTS="compiler-rt;libunwind;libcxx;libcxxabi;lld;clang" \
      -DCLANG_VENDOR="CMLFS 3.0.0" -DLLD_VENDOR="CMLFS 3.0.0" \
      $CT $CTG $CP $CRT $CLG $CLCPP $CLCPPA $CUW $CLLVM $COFF \
      -DCMAKE_INSTALL_LIBDIR=lib -DCOMPILER_RT_CXX_LIBRARY=libcxx \
      -DFFI_INCLUDE_DIR=/usr/include -DFFI_LIBRARY_DIR=/usr/lib \
      -DBENCHMARK_USE_BUNDLED_GTEST=OFF -DLIBCXX_INCLUDE_BENCHMARKS=OFF \
      -DLLVM_INCLUDE_BENCHMARKS=OFF

# compile
ninja -C build

# If build fails to compile, use below to see what component failed.
# ninja -C build $TARGET
# Build target break down:
builtins # 166 ............. PASS
unwind # 19 ................ PASS
cxxabi # 828 ............... PASS
cxx # 89 ................... PASS
compiler-rt # 149 .......... PASS
llvm-tblgen # 242 .......... PASS
lld # 1824 ................. PASS
libclang # 798 ............. PASS
clang # 336 ................ PASS
remaining targets # 693 .... FAIL

# FAIL:
[20/678] Building CXX object tools/sancov/CMakeFiles/sancov.dir/sancov.cpp.o
ninja: job failed: /llvmtools/bin/x86_64-pc-linux-musl-clang++ -DHAVE_POSIX_REGEX -DHAVE_STD_REGEX -DHAVE_STEADY_CLOCK -D__STDC_CONSTANT_MACROS -D__STD
C_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/sources/llvm-project-15.0.6.src/build/third-party/benchmark/src -I/sources/llvm-project-15.0.6.src/third-party
/benchmark/src -I/sources/llvm-project-15.0.6.src/build/include -I/sources/llvm-project-15.0.6.src/llvm/include -I/sources/llvm-project-15.0.6.src/thir
d-party/benchmark/include -fPIC -stdlib=libc++ -fvisibility-inlines-hidden -Wall -Wextra -Wno-unused-parameter -Wwrite-strings -Wcast-qual -Wmissing-fi
eld-initializers -pedantic -Wno-long-long -Wno-noexcept-type -Wnon-virtual-dtor -Wdelete-non-virtual-dtor -Wsuggest-override -fdiagnostics-color  -std=
c++11  -Wall  -Wextra  -Wshadow  -Wsuggest-override  -pedantic  -pedantic-errors  -Wshorten-64-to-32  -fstrict-aliasing  -Wno-deprecated-declarations
-fno-exceptions  -Wstrict-aliasing  -Wthread-safety -O3 -DNDEBUG -std=c++14 -MD -MT third-party/benchmark/src/CMakeFiles/benchmark.dir/timers.cc.o -MF
third-party/benchmark/src/CMakeFiles/benchmark.dir/timers.cc.o.d -o third-party/benchmark/src/CMakeFiles/benchmark.dir/timers.cc.o -c /sources/llvm-pro
ject-15.0.6.src/third-party/benchmark/src/timers.cc
clang-15: warning: argument unused during compilation: '-stdlib=libc++' [-Wunused-command-line-argument]
In file included from /sources/llvm-project-15.0.6.src/third-party/benchmark/src/timers.cc:25:
/usr/include/fcntl.h:170:16: error: flexible array members are a C99 feature [-Werror,-Wc99-extensions]
        unsigned char f_handle[];
                      ^
